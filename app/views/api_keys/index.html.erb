<%= render 'shared/page-header' do %>
  <%= t('views.api_keys.index.title') %>
<% end %>
<div class="tw-p-4">
  <div class="umn-post-it md:tw-grid tw-grid-cols-4 tw-py-16 tw-gap-8">
    <aside class="tw-col-start-4 tw-row-start-1 tw-mb-8">
      <div class="tw-sticky tw-top-4 tw-p-4 tw-bg-neutral-100">
        <h2 class="tw-uppercase tw-text-xs tw-text-neutral-400 tw-mt-0 tw-mb-2">Contents</h2>
        <ul>
          <li><a href="#using-the-api">Using the API</a></li>
          <li>
            <a href="#create-zlink">Create Z-links</a>
          </li>
          <li>
            <a href="#update-zlink">Update Z-links</a>
          </li>
        </ul>
      </div>
    </aside>
    <div class="tw-prose tw-prose-lg tw-mx-auto tw-col-span-3 tw-grid tw-col-start-1 tw-row-start-1">
      <section id="using-the-api">
        <header class="tw-sticky tw-top-0 tw-backdrop-blur-sm">
          <h2 class="tw-mt-0">Using the Z Api</h2>
        </header>
        <div class="tw-flex tw-flex-col tw-gap-2">
          <div class="panel panel-default">
            <div class="panel-heading">Access ID</div>
            <div class="panel-body">
              <%= current_user.uid %>
            </div>
          </div>
          <div class="panel panel-default">
            <div class="panel-heading">Secret Key</div>
            <div class="panel-body">
              <%= current_user.secret_key %>
              <%= link_to api_keys_path, method: :post, class: 'btn btn-default clipboard-btn' do %>
                <i class=" fa fa-key"></i>
                Generate new key
              <% end %>
            </div>
          </div>
        </div>
        <p>Z features an API for creating and updating directly from your applications.</p>
        <p>
          Each API request must have an http <code>Authorization</code> header with your <b>Access ID</b> (above) and a payload signed with your <b>Secret Key</b> (above) in the form of a <a href="https://jwt.io">JSON Web Token</a> (or JWT). The access id and signed payload are separated by a colon <code>:</code>.
        </p>
        <pre><code>Authorization: {your_access_id}:{your_signed_payload}</code></pre>
        <p>
          To create your signed payload, use <a href="https://jwt.io/libraries">a JWT library</a> for your programming language.  
        </p>
        <p>
          The examples below use JavaScript and the <a href="https://github.com/auth0/node-jsonwebtoken">jsonwebtoken</a> library. You can also <a href="https://github.com/UMN-LATIS/z-api-example">find an example implementation</a> on Github.
        </p>
      </section>
      <section id="create-zlink">
        <header class="tw-sticky tw-top-0 tw-backdrop-blur-sm">
          <h2 class="tw-m-0">Create Z-Links (batch)</h2>
          <p class="tw-text-center tw-mt-0"><b>POST `/api/v1/urls`</b></p>
        </header>
        <h3>Payload</h3>
        <pre><code>{
  "urls": [
    { "url": "https://example.org" }, 
    { "url": "https://example.org/1", "keyword": "my-zlink" },
    { 
      "url": "https://example.org/2",
      "keyword": "my-zlink2", 
      "collection": "my-collection-name"
    }
  ],
}</code></pre>
        <p>Parameters:</p>
        <ul>
          <li><code>urls</code> <small>(required)</small> - array of urls to create</li>
          <li><code>urls.url</code> <small>(required)</small> - long url of the z-link</li>
          <li><code>urls.keyword</code> - short code which redirects to the url</li>
          <li><code>urls.collection</code> - name of collection to add this url to</li>
        </ul>
        <h3>Example</h3>
        <p>Request:</p>
        <pre><code>import jsonwebtoken from "jsonwebtoken";

const ACCESS_ID = "my_access_id"; // use your access_id from above
const SECRET_KEY = "fhRzRyD..."; // use your secret_key from above

const payload = {
  urls: [
    { url: "https://example.org" },
    { url: "https://example.org/1", keyword: "my-zlink" },
    // ...
  ],
};

// signing your payload with `SECRET_KEY`
const signedPayload = jsonwebtoken.sign(payload, SECRET_KEY)

// send the POST request to the server
const response = await fetch(
  `https://z.umn.edu/api/v1/urls`,
  {
    method: "POST",
    headers: {
      Authorization: `${ACCESS_ID}:${signedPayload}`,
    },
  }
);

const json = await response.json();
console.log(JSON.stringify(json));
      </code></pre>
        <p>Response:</p>
        <pre><code>[{
  "url": "https://example.org",
  "result": { 
    "status": "success",
    "message": "https://z.umn.edu/rd4n3b"
  },
},{
  "url": "https://example.org/1",
  "keyword": "my-zlink",
  "result": { 
    "status": "error",
    "message": ["Keyword has already been taken"] 
  },
}];</code></pre>
      </section>
      <section id="update-zlink">
        <header class="tw-sticky tw-top-0 tw-backdrop-blur-sm tw-bg-white/25">
          <h2 class="tw-m-0">Update Z-Link Url</h2>
          <p class="tw-m-0 tw-text-center"><b>PUT `/api/v1/urls/{keyword}`</b></p>
        </header>
        <h3>Payload</h3>
        <pre><code>{
  "keyword": "my-zlink",
  "url": "https://example.org/updated-url"
}</code></pre>
        <p>Parameters:</p>
        <ul>
          <li><code>keyword</code> <small>(required)</small> - short code which redirects to the url. This cannot be updated via API.</li>
          <li><code>url</code> <small>(required)</small> - long url of the z-link</li>
        </ul>
        <h3>Example</h3>
        <p>Request:</p>
        <pre><code>import jsonwebtoken from "jsonwebtoken";

const ACCESS_ID = "my_access_id"; // use your access_id from above
const SECRET_KEY = "fhRzRyD..."; // use your secret_key from above

const payload = {
  keyword: "my-zlink",
  url: "https://example.org/updated-url"
};

// sign your payload with `SECRET_KEY`
const signedPayload = jsonwebtoken.sign(payload, SECRET_KEY)

// send the POST request to the server
const response = await fetch(
  `https://z.umn.edu/api/v1/urls/${payload.keyword}`,
  {
    method: "PUT",
    headers: {
      Authorization: `${ACCESS_ID}:${signedPayload}`,
    },
  }
);

const json = await response.json();
console.log(JSON.stringify(json));
</code></pre>
        <p>Response:</p>
        <pre><code>{ 
  "status": "success", 
  "message": {
    "url": "https://example.org/updated-url",
    "keyword": "my-zlink",
  }
}</code></pre>
      </section>
    </div>
  </div>
</div>
